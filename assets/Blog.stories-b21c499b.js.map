{"version":3,"file":"Blog.stories-b21c499b.js","sources":["../../src/pages/Blog.tsx","../../src/pages/Blog.stories.tsx"],"sourcesContent":["import Button from \"@components/Button\";\nimport Card from \"@components/blog/Card\";\nimport LoadingCard from \"@components/blog/LoadingCard\";\nimport MultiSelection, {\n  Option,\n  SingleSelection,\n} from \"@components/input/MultiSelection\";\nimport SearchField from \"@components/input/SearchField\";\nimport useDevdottoArticlesMeta from \"@hooks/useDevdottoArticlesMeta\";\nimport cn from \"@styles/cssUtils\";\nimport { DevdottoArticleMeta } from \"@utils/devdottoArticle\";\nimport { RiRefreshFill } from \"react-icons/ri\";\nimport { SiDevdotto, SiMedium } from \"react-icons/si\";\n\nconst sorts = [\"Popularity\", \"Latest\", \"Quick Reads\"] as const;\n\ntype SortOption = {\n  value: typeof sorts[number];\n  label: typeof sorts[number];\n};\n\nconst sortOptions: readonly SortOption[] = sorts.map((sort) => ({\n  value: sort,\n  label: sort,\n}));\n\nconst sortByPopularity = (a: DevdottoArticleMeta, b: DevdottoArticleMeta) =>\n  b.public_reactions_count - a.public_reactions_count;\n\nconst sortByQuickReads = (a: DevdottoArticleMeta, b: DevdottoArticleMeta) =>\n  a.reading_time_minutes - b.reading_time_minutes;\n\nconst sortByLatest = (a: DevdottoArticleMeta, b: DevdottoArticleMeta) =>\n  new Date(b.published_timestamp).getTime() -\n  new Date(a.published_timestamp).getTime();\n\nconst sortFuncFromOption = (\n  sort: typeof sorts[number]\n): ((a: DevdottoArticleMeta, b: DevdottoArticleMeta) => number) => {\n  switch (sort) {\n    case \"Latest\":\n      return sortByLatest;\n\n    case \"Quick Reads\":\n      return sortByQuickReads;\n\n    case \"Popularity\":\n      return sortByPopularity;\n\n    default:\n      return () => 0;\n  }\n};\n\nconst searchFilter = (searchText: string, item: DevdottoArticleMeta) => {\n  const search = searchText.toLowerCase();\n  return (\n    search.length === 0 ||\n    item.title.toLowerCase().includes(search) ||\n    item.description.toLowerCase().includes(search) ||\n    item.tag_list.some((tag) => tag.toLowerCase().includes(search))\n  );\n};\n\nconst Blog = () => {\n  const recentArticles = useDevdottoArticlesMeta(100);\n  const [selectedTags, setSelectedTags] = useState<readonly Option[]>([]);\n  const [selectedSort, setSelectedSort] = useState<SortOption>(sortOptions[0]!);\n  const [tagOptions, setTagOptions] = useState<readonly Option[]>([]);\n  const [searchText, setSearchText] = useState<string>(\"\");\n\n  useEffect(() => {\n    setTagOptions(\n      !recentArticles.loading\n        ? [\n            ...new Set(\n              recentArticles.articles.flatMap(\n                (articleMeta) => articleMeta.tag_list\n              )\n            ),\n          ]\n            .map((tag) => {\n              const count = recentArticles.articles.filter((articleMeta) =>\n                articleMeta.tag_list.includes(tag)\n              ).length;\n              return {\n                value: tag,\n                count,\n                label: `${tag} (${count})`,\n              };\n            })\n            .filter((option) => option.count > 0)\n            .sort((a, b) => b.count - a.count)\n        : []\n    );\n  }, [recentArticles.articles, recentArticles.loading]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    setSearchText(e.target.value);\n  };\n\n  const [isResetButtonAnimated, setIsResetButtonAnimated] = useState(false);\n\n  const resetOptions = () => {\n    setSelectedTags([]);\n    setSelectedSort(sortOptions[0]!);\n    setSearchText(\"\");\n    setIsResetButtonAnimated(true);\n    setTimeout(() => {\n      setIsResetButtonAnimated(false);\n    }, 500);\n  };\n\n  const filteredArticles = recentArticles.loading\n    ? []\n    : recentArticles.articles\n        .sort(sortByPopularity)\n        .sort(sortFuncFromOption(selectedSort.value))\n        .filter((articleMeta) => {\n          const tags = selectedTags.map((tag) => tag.value);\n          return (\n            searchFilter(searchText, articleMeta) &&\n            (selectedTags.length === 0 ||\n              articleMeta.tag_list.filter((articleTag) =>\n                tags.includes(articleTag)\n              ).length !== 0)\n          );\n        })\n        .map((articleMeta, index) => (\n          <Card article={articleMeta} key={index} />\n        ));\n\n  return (\n    <div>\n      <section>\n        <div\n          className={cn(\n            \"flex gap-4 justify-center items-center max-w-2xl mx-auto mb-8\",\n            \"flex-row\",\n            \"flex-wrap\"\n          )}\n        >\n          <Button\n            icon={<SiDevdotto />}\n            isLight\n            label={\"DEV.to\"}\n            to=\"https://dev.to/timwjames\"\n            tooltip=\"Find my personal blog @timwjames\"\n          />\n          <Button\n            icon={<SiMedium />}\n            isLight\n            label={\"Medium\"}\n            to=\"https://medium.com/@twjames\"\n            tooltip=\"Find my professional @twjames\"\n          />\n        </div>\n        <div\n          className={cn(\n            \"flex mx-auto items-center place-content-center mb-4\",\n            \"flex-col\"\n          )}\n        >\n          <div className={cn(\"w-full flex gap-4\")}>\n            <SearchField handleChange={handleChange} searchText={searchText} />\n            <Button\n              className={cn(\"h-11\", \"flex\")}\n              icon={\n                isResetButtonAnimated ? (\n                  <span\n                    className={cn(\n                      \"inline-block\",\n                      \"leading-0\",\n                      \"motion-safe:animate-spin\"\n                    )}\n                  >\n                    <RiRefreshFill />\n                  </span>\n                ) : (\n                  <RiRefreshFill />\n                )\n              }\n              iconRight\n              isLight\n              label={\"Reset\"}\n              mode=\"button\"\n              onClick={resetOptions}\n              tooltip=\"Reset search and filters options\"\n            />\n          </div>\n          <div className={cn(\"flex gap-4 w-full\", \"flex-wrap\")}>\n            <div className={cn(\"z-30 grow min-w-fit\")}>\n              <SingleSelection\n                options={sortOptions}\n                selectedOption={selectedSort}\n                setSelectedOption={setSelectedSort}\n              />\n            </div>\n            <div className={cn(\"z-20 grow\")}>\n              <MultiSelection\n                options={tagOptions}\n                placeholder=\"Filter by tags...\"\n                selectedOptions={selectedTags}\n                setSelectedOptions={setSelectedTags}\n              />\n            </div>\n          </div>\n        </div>\n        <div className={cn(\"flex gap-4 p-0 justify-center\", \"flex-wrap\")}>\n          {recentArticles.loading ? (\n            [...Array(6).keys()].map((key) => <LoadingCard key={key} />)\n          ) : filteredArticles.length === 0 ? (\n            <div className={cn(\"text-center mb-8 text-xl \")}>\n              <span className={cn(\"text-danger\")}>No Articles Found</span> - Try\n              a different filter\n            </div>\n          ) : (\n            filteredArticles\n          )}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Blog;\n","import Footer from \"@components/layout/Footer\";\nimport Page from \"@components/layout/Page\";\nimport Navbar from \"@components/layout/nav/Navbar\";\nimport ScrollToTop from \"@components/utils/ScrollToTop\";\nimport { BLOG } from \"@constants/routes\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport BlogPage from \"./Blog\";\nexport default {\n  component: BlogPage,\n  parameters: {\n    backgrounds: {\n      disable: true\n    },\n    controls: {\n      hideNoControlsWarning: true\n    }\n  }\n};\nexport const Blog = () => <Router>\n    <ScrollToTop />\n    <Navbar />\n    <Page content={<BlogPage />} description={BLOG.description} title={BLOG.title} />\n    <Footer allowFixed />\n  </Router>;\nBlog.parameters = {\n  ...Blog.parameters,\n  storySource: {\n    source: \"() => <Router>\\n    <ScrollToTop />\\n    <Navbar />\\n    <Page content={<BlogPage />} description={BLOG.description} title={BLOG.title} />\\n    <Footer allowFixed />\\n  </Router>\",\n    ...Blog.parameters?.storySource\n  }\n};"],"names":["sorts","sortOptions","sort","sortByPopularity","a","b","sortByQuickReads","sortByLatest","sortFuncFromOption","searchFilter","searchText","item","search","tag","Blog","recentArticles","useDevdottoArticlesMeta","selectedTags","setSelectedTags","useState","selectedSort","setSelectedSort","tagOptions","setTagOptions","setSearchText","useEffect","articleMeta","count","option","handleChange","e","isResetButtonAnimated","setIsResetButtonAnimated","resetOptions","filteredArticles","tags","articleTag","index","jsx","Card","jsxs","cn","Button","SiDevdotto","SiMedium","SearchField","RiRefreshFill","SingleSelection","MultiSelection","key","LoadingCard","BlogPage","Blog_stories","Router","ScrollToTop","Navbar","Page","BLOG","Footer","_a"],"mappings":"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"}