{"version":3,"file":"MenuToggle-84511acb.js","sources":["../../src/components/layout/nav/MenuToggle.tsx"],"sourcesContent":["import { useTouchInputQuery } from \"@hooks/useMediaQuery\";\nimport { domAnimation, LazyMotion, m } from \"framer-motion\";\n\n// Adapted from: https://github.com/ipenywis/react-navbar-responsive\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst Path = (props: any) => (\n  <LazyMotion features={domAnimation}>\n    <m.path\n      fill=\"transparent\"\n      strokeLinecap=\"round\"\n      strokeWidth=\"3\"\n      {...props}\n    />\n  </LazyMotion>\n);\n\nconst transition = { duration: 0.11 };\n\n/**\n * Description placeholder\n *\n * @param {{ toggle; isOpen; baseColor; hoverColor; }} {\n * function to run on toggle, whether the menu is open, base color, hover color\n * }\n */\nconst MenuToggle: React.FC<{\n  toggle: () => void;\n  isOpen: boolean;\n  baseColor: string;\n  hoverColor: string;\n}> = ({ toggle, isOpen, baseColor, hoverColor }) => {\n  const [isHovered, setHovered] = useState(false);\n  const deviceIsTouch = useTouchInputQuery();\n  const color = isHovered && !deviceIsTouch ? hoverColor : baseColor;\n\n  const enableHover = useCallback(() => setHovered(true), []);\n  const disableHover = useCallback(() => setHovered(false), []);\n\n  return (\n    <button\n      aria-label=\"Open Navigation Menu\"\n      onClick={toggle}\n      onMouseEnter={enableHover}\n      onMouseLeave={disableHover}\n      type=\"button\"\n    >\n      <svg height=\"50\" viewBox=\"-1 -3 25 25\" width=\"50\">\n        <Path\n          animate={isOpen ? \"open\" : \"closed\"}\n          initial={false}\n          transition={transition}\n          variants={{\n            closed: { d: \"M 2 2.5 L 20 2.5\", stroke: color },\n            open: { d: \"M 3 16.5 L 17 2.5\", stroke: color },\n          }}\n        />\n        <Path\n          animate={isOpen ? \"open\" : \"closed\"}\n          d=\"M 2 9.423 L 20 9.423\"\n          initial={false}\n          stroke={color}\n          transition={transition}\n          variants={{\n            closed: { opacity: 1 },\n            open: { opacity: 0 },\n          }}\n        />\n        <Path\n          animate={isOpen ? \"open\" : \"closed\"}\n          initial={false}\n          transition={transition}\n          variants={{\n            closed: { d: \"M 2 16.346 L 20 16.346\", stroke: color },\n            open: { d: \"M 3 2.5 L 17 16.346\", stroke: color },\n          }}\n        />\n      </svg>\n    </button>\n  );\n};\n\nexport default MenuToggle;\n"],"names":["Path","props","jsx","LazyMotion","domAnimation","m","transition","MenuToggle","toggle","isOpen","baseColor","hoverColor","isHovered","setHovered","useState","deviceIsTouch","useTouchInputQuery","color","enableHover","useCallback","disableHover","jsxs"],"mappings":"wOAMA,MAAAA,EAAAC,GAAAC,MAAAC,EAAA,CAAA,SAAAC,EAAA,SAAAF,EAAA,IAEIG,EAAA,KAAG,CAAF,KAAA,cACM,cAAA,QACS,YAAA,IACF,GAAAJ,CACR,CACN,CAAA,CAAA,EAIJK,EAAA,CAAA,SAAA,KASAC,EAAA,CAAA,CAAA,OAAAC,EAAA,OAAAC,EAAA,UAAAC,EAAA,WAAAC,CAAA,IAAA,CAME,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACAC,EAAAC,IACAC,EAAAL,GAAA,CAAAG,EAAAJ,EAAAD,EAEAQ,EAAAC,EAAAA,YAAA,IAAAN,EAAA,EAAA,EAAA,CAAA,CAAA,EACAO,EAAAD,EAAAA,YAAA,IAAAN,EAAA,EAAA,EAAA,CAAA,CAAA,EAEA,OAAAX,EAAA,IACE,SAAC,CAAA,aAAA,uBACY,QAAAM,EACF,aAAAU,EACK,aAAAE,EACA,KAAA,SACT,SAAAC,EAAA,KAAA,MAAA,CAAA,OAAA,KAAA,QAAA,cAAA,MAAA,KAAA,SAAA,CAGHnB,EAAA,IAAAF,EAAC,CAAA,QAAAS,EAAA,OAAA,SAC4B,QAAA,GAClB,WAAAH,EACT,SAAA,CACU,OAAA,CAAA,EAAA,mBAAA,OAAAW,CAAA,EACuC,KAAA,CAAA,EAAA,oBAAA,OAAAA,CAAA,CACD,CAChD,CAAA,EACFf,EAAA,IACAF,EAAC,CAAA,QAAAS,EAAA,OAAA,SAC4B,EAAA,uBACzB,QAAA,GACO,OAAAQ,EACD,WAAAX,EACR,SAAA,CACU,OAAA,CAAA,QAAA,CAAA,EACa,KAAA,CAAA,QAAA,CAAA,CACF,CACrB,CAAA,EACFJ,EAAA,IACAF,EAAC,CAAA,QAAAS,EAAA,OAAA,SAC4B,QAAA,GAClB,WAAAH,EACT,SAAA,CACU,OAAA,CAAA,EAAA,yBAAA,OAAAW,CAAA,EAC6C,KAAA,CAAA,EAAA,sBAAA,OAAAA,CAAA,CACL,CAClD,CAAA,CACF,EAAA,CACF,CAAA,CAGN"}