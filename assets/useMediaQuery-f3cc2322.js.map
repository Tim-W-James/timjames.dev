{"version":3,"file":"useMediaQuery-f3cc2322.js","sources":["../../src/hooks/useMediaQuery.ts"],"sourcesContent":["/**\n * Hook to check if a css media query is true\n *\n * @param {string} query\n * @example useMediaQuery(\"(min-width: 1280px)\")\n */\nconst useMediaQuery = (query: string) => {\n  const [matches, setMatches] = useState(false);\n  useEffect(\n    () => {\n      const mediaQuery = window.matchMedia(query);\n      setMatches(mediaQuery.matches);\n      const handler = (event: MediaQueryListEvent) => setMatches(event.matches);\n      mediaQuery.addEventListener(\"change\", handler);\n      return () => mediaQuery.removeEventListener(\"change\", handler);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [] // Empty array ensures effect is only run on mount and unmount\n  );\n  return matches;\n};\n\n/**\n * Check if on a mobile device\n */\nexport const useMobileQuery = () =>\n  useMediaQuery(\"(hover: none) and (pointer: coarse)\");\n\n/**\n * Check if the primary input is touch (not necessarily a mobile device)\n */\nexport const useTouchInputQuery = () => useMediaQuery(\"(pointer: coarse)\");\n\nexport default useMediaQuery;\n"],"names":["useMediaQuery","query","matches","setMatches","useState","useEffect","mediaQuery","handler","event","useMobileQuery","useTouchInputQuery"],"mappings":"wCAMA,MAAAA,EAAAC,GAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACAC,OAAAA,EAAA,UAAA,IAAA,CAEI,MAAAC,EAAA,OAAA,WAAAL,CAAA,EACAE,EAAAG,EAAA,OAAA,EACA,MAAAC,EAAAC,GAAAL,EAAAK,EAAA,OAAA,EACA,OAAAF,EAAA,iBAAA,SAAAC,CAAA,EACA,IAAAD,EAAA,oBAAA,SAAAC,CAAA,CAA6D,EAC/D,CAAA,CAEC,EAEHL,CACF,EAKOO,EAAA,IAAAT,EAAA,qCAAA,EAMAU,EAAA,IAAAV,EAAA,mBAAA"}