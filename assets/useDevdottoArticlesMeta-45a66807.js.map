{"version":3,"file":"useDevdottoArticlesMeta-45a66807.js","sources":["../../src/features/blog/services/devdottoArticle.ts","../../src/features/blog/hooks/useDevdottoArticlesMeta.ts"],"sourcesContent":["import DevdottoArticle, { DevdottoArticleMeta } from \"../types/devdottoArticle\";\n\n// Setup API endpoints and queries\nconst DEV_DOT_TO_USERNAME = \"timwjames\";\nconst ARTICLES_API = \"https://dev.to/api/articles\";\n\n// Helper method to type responses\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst parseResponse = <T>(response: any): T =>\n  (typeof response === \"string\" ? JSON.parse(response) : response) as T;\n\n/**\n * Get all articles from dev.to\n *\n */\nexport const devdottoArticlesMeta = async (articles: number) =>\n  parseResponse<Array<DevdottoArticleMeta>>(\n    (\n      await fetch(\n        ARTICLES_API +\n          \"?\" +\n          new URLSearchParams({\n            username: DEV_DOT_TO_USERNAME,\n            per_page: String(articles),\n          })\n      )\n    ).json()\n  );\n\n/**\n * Get a single dev.to article\n *\n * @param {string} slug - URL slug (title) for the article\n */\nconst devdottoArticle = async (slug: string) =>\n  parseResponse<DevdottoArticle>(\n    (await fetch(`${ARTICLES_API}/${DEV_DOT_TO_USERNAME}/${slug}`)).json()\n  );\n\nexport default devdottoArticle;\n","import { devdottoArticlesMeta } from \"../services/devdottoArticle\";\nimport { DevdottoArticleMeta } from \"../types/devdottoArticle\";\n\n/**\n * Fetch metadata for all dev.to articles\n *\n * @param onError - a callback which is invoked if the request fails\n */\nconst useDevdottoArticleMeta = (count?: number, onError?: () => void) => {\n  const [loading, setLoading] = useState(true);\n  const [articles, setArticles] = useState<Array<DevdottoArticleMeta>>([]);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setArticles(await devdottoArticlesMeta(count || 1));\n      } catch (e) {\n        onError?.();\n      }\n\n      setLoading(false);\n    })();\n  }, [count, onError]);\n\n  // Return the array of articles, and the loading indicator\n  return { articles, loading };\n};\n\nexport default useDevdottoArticleMeta;\n"],"names":["DEV_DOT_TO_USERNAME","ARTICLES_API","parseResponse","response","devdottoArticlesMeta","articles","useDevdottoArticleMeta","count","onError","loading","setLoading","useState","setArticles","useEffect"],"mappings":"wCAGA,MAAMA,EAAsB,YACtBC,EAAe,8BAIfC,EAAoBC,GACvB,OAAOA,GAAa,SAAW,KAAK,MAAMA,CAAQ,EAAIA,EAM5CC,EAAuB,MAAOC,GACzCH,GAEI,MAAM,MACJD,EACE,IACA,IAAI,gBAAgB,CAClB,SAAUD,EACV,SAAU,OAAOK,CAAQ,CAAA,CAC1B,IAEL,KAAK,CACT,ECnBFC,EAAA,CAAAC,EAAAC,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAN,EAAAO,CAAA,EAAAD,EAAA,SAAA,CAAA,CAAA,EAEAE,OAAAA,EAAAA,UAAA,IAAA,EACE,SAAA,CACE,GAAA,CACED,EAAA,MAAAR,EAAAG,GAAA,CAAA,CAAA,CAAkD,MAAA,CAElDC,GAAA,MAAAA,GAAU,CAGZE,EAAA,EAAA,CAAgB,IACf,EAAA,CAAAH,EAAAC,CAAA,CAAA,EAIL,CAAA,SAAAH,EAAA,QAAAI,EACF"}