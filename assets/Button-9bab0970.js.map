{"version":3,"file":"Button-9bab0970.js","sources":["../../src/components/buttons/Button.tsx"],"sourcesContent":["import { useTouchInputQuery } from \"@hooks/useMediaQuery\";\nimport cn, { cnScoped } from \"@styles/cssUtils\";\nimport { setMouseHoverCssProperties } from \"@utils/mouseHover\";\nimport { isMobileSafari, isSafari } from \"react-device-detect\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"./Button.module.scss\";\n\nexport type ButtonProps = {\n  /**\n   * Label display text\n   */\n  label?: string;\n  /**\n   * Title to display on hover\n   */\n  tooltip?: string;\n  /**\n   * Icon element to display next to the label\n   */\n  icon?: JSX.Element;\n  /**\n   * Whether to use the light or dark theme\n   */\n  isLight?: boolean;\n  /**\n   * Conditionally hide the label\n   */\n  isLabelHidden?: boolean;\n  /**\n   * Position the icon to the right, left by default\n   */\n  iconRight?: boolean;\n  /**\n   * Disable the button\n   */\n  disabled?: boolean;\n  /**\n   * Appear disabled, but still interactive for accessibility reasons\n   */\n  appearInactive?: boolean;\n  /**\n   * Custom class names to append to the defaults\n   */\n  className?: string;\n} & (\n  | {\n      /**\n       * Whether to route to a SPA route or an external link\n       */\n      mode?: \"route\" | \"anchor\";\n      /**\n       * href or link for the anchor or route respectively\n       */\n      to?: string;\n    }\n  | {\n      /**\n       * Treat as a primitive HTML button with an onClick\n       */\n      mode: \"button\";\n      /**\n       * Click event\n       */\n      onClick?: React.MouseEventHandler<HTMLButtonElement>;\n      /**\n       * Props to pass to the HTML button\n       */\n      childProps?: React.ComponentPropsWithoutRef<\"button\">;\n    }\n);\n\n/**\n * Custom button component\n */\nconst Button = ({\n  label,\n  tooltip,\n  icon,\n  isLight,\n  isLabelHidden,\n  iconRight,\n  disabled,\n  appearInactive,\n  className: additionalClassName,\n  ...otherProps // eslint-disable-next-line sonarjs/cognitive-complexity\n}: ButtonProps) => {\n  const deviceIsTouch = useTouchInputQuery();\n\n  const className = cnScoped(styles)(\n    styles._acrylicButton,\n    label && !isLabelHidden ? \"px-8\" : \"px-4 h-fit\",\n    isLight && !disabled ? \"acrylic-light\" : \"acrylic-dark\",\n    isLight && !disabled ? styles._light : styles._dark,\n    // Radial border doesn't work with Safari\n    { [styles._safari]: isSafari || isMobileSafari },\n    { [styles._appearInactive]: Boolean(appearInactive) }\n  );\n\n  const setHoverEffects = useCallback(\n    (e: React.MouseEvent<HTMLElement>) =>\n      setMouseHoverCssProperties(e, false, deviceIsTouch),\n    [deviceIsTouch]\n  );\n\n  const inner = (\n    <span className={cn(\"flex items-center justify-between gap-2\")}>\n      {iconRight ? (\n        <>\n          {!isLabelHidden ? label : null}\n          {icon}\n        </>\n      ) : (\n        <>\n          {icon}\n          {!isLabelHidden ? label : null}\n        </>\n      )}\n    </span>\n  );\n\n  switch (otherProps.mode) {\n    case \"route\":\n      return (\n        <Link\n          aria-label={label}\n          className={\n            className + (additionalClassName ? ` ${additionalClassName}` : \"\")\n          }\n          onMouseMove={setHoverEffects}\n          // eslint-disable-next-line react/jsx-no-leaked-render\n          title={label && tooltip}\n          to={otherProps.to ?? \"/\"}\n          type=\"button\"\n        >\n          {inner}\n        </Link>\n      );\n\n    case \"button\":\n      return (\n        <button\n          aria-label={label}\n          className={\n            className + (additionalClassName ? ` ${additionalClassName}` : \"\")\n          }\n          disabled={disabled}\n          onClick={otherProps.onClick}\n          onMouseMove={setHoverEffects}\n          // eslint-disable-next-line react/jsx-no-leaked-render\n          title={label && tooltip}\n          type=\"button\"\n          {...otherProps.childProps}\n        >\n          {inner}\n        </button>\n      );\n\n    default:\n      return (\n        <a\n          aria-label={label}\n          className={`${className} ${additionalClassName ?? \"\"}`}\n          href={otherProps.to ?? \"/\"}\n          onMouseMove={setHoverEffects}\n          rel=\"noreferrer\"\n          target=\"_blank\"\n          // eslint-disable-next-line react/jsx-no-leaked-render\n          title={label && tooltip}\n          type=\"button\"\n        >\n          {inner}\n        </a>\n      );\n  }\n};\n\nexport default Button;\n"],"names":["Button","label","tooltip","icon","isLight","isLabelHidden","iconRight","disabled","appearInactive","additionalClassName","otherProps","deviceIsTouch","useTouchInputQuery","className","cnScoped","styles","isSafari","isMobileSafari","setHoverEffects","useCallback","e","setMouseHoverCssProperties","inner","jsx","cn","jsxs","Fragment","Link","ButtonComponent"],"mappings":"0eA2EAA,EAAA,CAAA,CAAgB,MAAAC,EACd,QAAAC,EACA,KAAAC,EACA,QAAAC,EACA,cAAAC,EACA,UAAAC,EACA,SAAAC,EACA,eAAAC,EACA,UAAAC,EACW,GAAAC,CAEb,IAAA,CACE,MAAAC,EAAAC,IAEAC,EAAAC,EAAA,EAAiCC,EAAA,eACxBd,GAAA,CAAAI,EAAA,OAAA,aAC4BD,GAAA,CAAAG,EAAA,gBAAA,eACMH,GAAA,CAAAG,EAAAQ,EAAA,OAAAA,EAAA,MACK,CAAA,CAAAA,EAAA,OAAA,EAAAC,GAAAC,CAAA,EAEC,CAAA,CAAAF,EAAA,eAAA,EAAA,EAAAP,CAAA,CACK,EAGtDU,EAAAC,EAAA,YAAwBC,GAAAC,EAAAD,EAAA,GAAAT,CAAA,EAE8B,CAAAA,CAAA,CACtC,EAGhBW,EAAAC,EAAA,IAAA,OAAA,CAAA,UAAAC,EAAA,yCAAA,EAAA,SAAAlB,EAAAmB,EAAA,KAAAC,EAAA,SAAA,CAAA,SAAA,CAISrB,EAAA,KAAAJ,EAAyBE,CACzB,CAAA,CAAA,EAAAsB,EAAAA,KAAAC,EAAA,SAAA,CAAA,SAAA,CAIAvB,EAAAE,EAAA,KAAAJ,CACyB,CAAA,CAAA,CAAA,CAAA,EAMlC,OAAAS,EAAA,KAAA,CAAyB,IAAA,QAErB,OAAAa,EAAA,IACEI,EAAC,CAAA,aAAA1B,EACa,UAAAY,GAAAJ,EAAA,IAAAA,CAAA,GAAA,IAEqD,YAAAS,EAEpD,MAAAjB,GAAAC,EAEG,GAAAQ,EAAA,IAAA,IACK,KAAA,SAChB,SAAAY,CAEJ,CAAA,EACH,IAAA,SAIF,OAAAC,EAAA,IACE,SAAC,CAAA,aAAAtB,EACa,UAAAY,GAAAJ,EAAA,IAAAA,CAAA,GAAA,IAEqD,SAAAF,EAEjE,QAAAG,EAAA,QACoB,YAAAQ,EACP,MAAAjB,GAAAC,EAEG,KAAA,SACX,GAAAQ,EAAA,WACU,SAAAY,CAEd,CAAA,EACH,QAIF,OAAAC,EAAA,IACE,IAAC,CAAA,aAAAtB,EACa,UAAA,GAAAY,CAAA,IAAAJ,GAAA,EAAA,GACwC,KAAAC,EAAA,IAAA,IAC7B,YAAAQ,EACV,IAAA,aACT,OAAA,SACG,MAAAjB,GAAAC,EAES,KAAA,SACX,SAAAoB,CAEJ,CAAA,CACH,CAGR,EAEAM,EAAA5B;"}