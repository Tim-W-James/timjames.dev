{"version":3,"file":"Button-dbaf1582.js","sources":["../../src/components/Button.tsx"],"sourcesContent":["import { useTouchInputQuery } from \"@hooks/useMediaQuery\";\nimport cn, { cnScoped } from \"@styles/cssUtils\";\nimport { setMouseHoverCssProperties } from \"@utils/mouseHover\";\nimport { Link } from \"react-router-dom\";\nimport styles, { ClassNames } from \"./Button.module.scss\";\n\n/**\n * Description placeholder\n *\n * @param {{ to; label; tooltip; icon; linkIsRoute; isLight; isLabelHidden; }} {\n  link,\n  label text,\n  tooltip text when hovering over button,\n  icon,\n  whether the link is a local route or external link,\n  use light theme,\n  hide the label text,\n}\n */\nconst Button: React.FC<{\n  to: string;\n  label?: string;\n  tooltip?: string;\n  icon?: JSX.Element;\n  linkIsRoute?: boolean;\n  isLight?: boolean;\n  isLabelHidden?: boolean;\n}> = ({\n  to: link,\n  label,\n  tooltip,\n  icon,\n  linkIsRoute,\n  isLight,\n  isLabelHidden,\n}) => {\n  const deviceIsTouch = useTouchInputQuery();\n\n  const className = cnScoped<ClassNames>()(\n    styles._acrylicButton,\n    label && !isLabelHidden ? \"px-8\" : \"px-4 h-fit\",\n    isLight ? \"acrylic-light\" : \"acrylic-dark\",\n    isLight ? styles._light : styles._dark\n  );\n\n  const inner = (\n    <span className={cn(\"flex items-center\")}>\n      {!isLabelHidden ? (icon && label ? `${label}\\u00A0` : label) : null}\n      {icon}\n    </span>\n  );\n\n  return linkIsRoute ? (\n    <Link\n      aria-label={label}\n      className={className}\n      onMouseMove={(e) => setMouseHoverCssProperties(e, false, deviceIsTouch)}\n      title={label && tooltip}\n      to={link}\n      type=\"button\"\n    >\n      {inner}\n    </Link>\n  ) : (\n    <a\n      aria-label={label}\n      className={className}\n      href={link}\n      onMouseMove={(e) => setMouseHoverCssProperties(e, false, deviceIsTouch)}\n      rel=\"noreferrer\"\n      target=\"_blank\"\n      title={label && tooltip}\n      type=\"button\"\n    >\n      {inner}\n    </a>\n  );\n};\n\nexport default Button;\n"],"names":["Button","link","label","tooltip","icon","linkIsRoute","isLight","isLabelHidden","deviceIsTouch","useTouchInputQuery","className","cnScoped","styles","inner","jsxs","cn","jsx","Link","e","setMouseHoverCssProperties","Button$1"],"mappings":"2TAmBAA,EAAA,CAAA,CAQM,GAAAC,EACA,MAAAC,EACJ,QAAAC,EACA,KAAAC,EACA,YAAAC,EACA,QAAAC,EACA,cAAAC,CAEF,IAAA,CACE,MAAAC,EAAAC,IAEAC,EAAAC,EAAA,EAAuCC,EAAA,eAC9BV,GAAA,CAAAK,EAAA,OAAA,aAC4BD,EAAA,gBAAA,eACPA,EAAAM,EAAA,OAAAA,EAAA,KACK,EAGnCC,EAAAC,EAAA,KAAA,OAAA,CAAA,UAAAC,EAAA,mBAAA,EAAA,SAAA,CAEKR,EAAA,KAAAH,GAAAF,EAAA,GAAAA,KAAAA,EAA8DE,CAC9D,CAAA,CAAA,EAIL,OAAAC,EAAAW,EAAA,IACEC,EAAC,CAAA,aAAAf,EACa,UAAAQ,EACZ,YAAAQ,GAAAC,EAAAD,EAAA,GAAAV,CAAA,EACsE,MAAAN,GAAAC,EACtD,GAAAF,EACZ,KAAA,SACC,SAAAY,CAEJ,CAAA,EAAAG,EAAA,IAGH,IAAC,CAAA,aAAAd,EACa,UAAAQ,EACZ,KAAAT,EACM,YAAAiB,GAAAC,EAAAD,EAAA,GAAAV,CAAA,EACgE,IAAA,aAClE,OAAA,SACG,MAAAN,GAAAC,EACS,KAAA,SACX,SAAAU,CAEJ,CAAA,CAGP,EAEAO,EAAApB"}