{"version":3,"file":"Blog.stories-8564c1cb.js","sources":["../../src/pages/Blog.tsx","../../src/pages/Blog.stories.tsx"],"sourcesContent":["import Button from \"@components/buttons/Button\";\nimport MultiSelection, {\n  Option,\n  SingleSelection,\n} from \"@components/input/MultiSelection\";\nimport SearchField from \"@components/input/SearchField\";\nimport BlogCard from \"@features/blog/components/BlogCard\";\nimport BlogCardLoading from \"@features/blog/components/BlogCardLoading\";\nimport { devdottoArticlesMeta } from \"@features/blog/services/devdottoArticle\";\nimport { DevdottoArticleMeta } from \"@features/blog/types/devdottoArticle\";\nimport sortFuncFromOption, {\n  SortOption,\n  sortByPopularity,\n  sortOptions,\n} from \"@features/blog/utils/sortFuncs\";\nimport useLocalStorage from \"@hooks/useLocalStorage\";\nimport { useQueryParams } from \"@hooks/useQueryParams\";\nimport cn from \"@styles/cssUtils\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { decodeArrayAsCsv, encodeArrayAsCsv } from \"@utils/encodeQueryParams\";\nimport FadeIn from \"react-fade-in\";\nimport { RiRefreshFill } from \"react-icons/ri\";\nimport { SiDevdotto, SiMedium } from \"react-icons/si\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst searchFilter = (searchText: string, item: DevdottoArticleMeta) => {\n  const search = searchText.toLowerCase();\n  return (\n    search.length === 0 ||\n    item.title.toLowerCase().includes(search) ||\n    item.description.toLowerCase().includes(search) ||\n    item.tag_list.some((tag) => tag.toLowerCase().includes(search))\n  );\n};\n\ntype BlogOptions = {\n  tags: readonly Option[];\n  sort: SortOption;\n  searchText: string;\n};\n\n// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\nconst defaultSort = sortOptions[0]!;\n\nconst articlesToDisplay = 30;\n\nconst Blog = () => {\n  const [selectedTags, setSelectedTags] = useState<readonly Option[]>([]);\n  const [selectedSort, setSelectedSort] = useState<SortOption>(defaultSort);\n  const [tagOptions, setTagOptions] = useState<readonly Option[]>([]);\n  const [searchText, setSearchText] = useState<string>(\"\");\n\n  const { status, data: articles } = useQuery(\n    [\"devdotto\", \"articlesMeta\", articlesToDisplay, 1],\n    devdottoArticlesMeta(articlesToDisplay)\n  );\n\n  useEffect(() => {\n    setTagOptions(\n      !articles\n        ? []\n        : [...new Set(articles.flatMap((articleMeta) => articleMeta.tag_list))]\n            .map((tag) => {\n              const count = articles.filter((articleMeta) =>\n                articleMeta.tag_list.includes(tag)\n              ).length;\n              return {\n                value: tag,\n                count,\n                label: `${tag} (${count})`,\n              };\n            })\n            .filter((option) => option.count > 0)\n            .sort((a, b) => b.count - a.count)\n    );\n  }, [articles]);\n\n  const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    e.preventDefault();\n    setSearchText(e.target.value);\n  }, []);\n\n  const [isResetButtonAnimated, setIsResetButtonAnimated] = useState(false);\n\n  const resetOptions = useCallback(() => {\n    setSelectedTags([]);\n    setSelectedSort(defaultSort);\n    setSearchText(\"\");\n    setIsResetButtonAnimated(true);\n    setTimeout(() => {\n      setIsResetButtonAnimated(false);\n    }, 500);\n  }, []);\n\n  const navigate = useNavigate();\n\n  const [localStorageProjectOptions, setLocalStorageProjectOptions] =\n    useLocalStorage<BlogOptions>(\"blogOptions\", {\n      tags: [],\n      sort: defaultSort,\n      searchText: \"\",\n    });\n\n  const queryParams = useQueryParams();\n\n  useEffect(() => {\n    if (queryParams.toString()) {\n      // Query params take precedence over local storage on initial load\n      if (queryParams.get(\"reset\")) {\n        resetOptions();\n        navigate(\n          {\n            hash: window.location.hash,\n            search: \"\",\n          },\n          {\n            replace: true,\n          }\n        );\n        return () => {};\n      }\n      setSelectedTags([]);\n      decodeArrayAsCsv(queryParams.get(\"technologies\") || \"\").forEach(\n        (value) => {\n          const option = selectedTags.find(\n            (o) => o.value.toLowerCase() === value.toLowerCase()\n          );\n          if (option) {\n            setSelectedTags((prev) => [...prev, option]);\n          }\n        }\n      );\n      setSelectedSort(\n        sortOptions.find(\n          (o) =>\n            o.value.toLowerCase() === queryParams.get(\"sort\")?.toLowerCase()\n        ) || defaultSort\n      );\n      setSearchText(queryParams.get(\"searchText\") || \"\");\n    } else {\n      // Populate the options from local storage\n      setSelectedTags(localStorageProjectOptions.tags);\n      setSelectedSort(localStorageProjectOptions.sort);\n      setSearchText(localStorageProjectOptions.searchText);\n    }\n    return () => {};\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    // Update local storage when options change\n    setLocalStorageProjectOptions({\n      tags: selectedTags,\n      sort: selectedSort,\n      searchText,\n    });\n    // Update query params\n    navigate(\n      {\n        hash: window.location.hash,\n        search: `?${new URLSearchParams(\n          // Strip any undefined values\n          JSON.parse(\n            JSON.stringify({\n              tags:\n                encodeArrayAsCsv(selectedTags.map((t) => t.value)) || undefined,\n              sort:\n                selectedSort.value === sortOptions[0]?.value\n                  ? undefined\n                  : selectedSort.value,\n              searchText: searchText || undefined,\n            })\n          )\n        ).toString()}`,\n      },\n      {\n        replace: true,\n      }\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchText, selectedSort, selectedTags]);\n\n  const filteredArticles = useMemo(\n    () =>\n      status === \"loading\" || status === \"error\"\n        ? []\n        : articles\n            .sort(sortByPopularity)\n            .sort(sortFuncFromOption(selectedSort.value))\n            .filter((articleMeta) => {\n              const tags = selectedTags.map((tag) => tag.value);\n              return (\n                searchFilter(searchText, articleMeta) &&\n                (selectedTags.length === 0 ||\n                  articleMeta.tag_list.filter((articleTag) =>\n                    tags.includes(articleTag)\n                  ).length !== 0)\n              );\n            })\n            .map((articleMeta, index) => (\n              <BlogCard article={articleMeta} key={index} />\n            )),\n    [articles, searchText, selectedSort.value, selectedTags, status]\n  );\n\n  return (\n    <div>\n      <FadeIn transitionDuration={200}>\n        <div\n          className={cn(\n            \"flex gap-4 justify-center items-center max-w-2xl mx-auto mb-8\",\n            \"flex-row\",\n            \"flex-wrap\"\n          )}\n        >\n          <Button\n            icon={<SiDevdotto />}\n            isLight\n            label=\"DEV.to\"\n            to=\"https://dev.to/timwjames\"\n            tooltip=\"Find my personal blog @timwjames\"\n          />\n          <Button\n            icon={<SiMedium />}\n            isLight\n            label=\"Medium\"\n            to=\"https://medium.com/@twjames\"\n            tooltip=\"Find my professional @twjames\"\n          />\n        </div>\n        <section\n          aria-label=\"Search Controls\"\n          className={cn(\n            \"flex mx-auto items-center place-content-center mb-4\",\n            \"flex-col\"\n          )}\n        >\n          <div className={cn(\"w-full flex gap-4\")}>\n            <SearchField handleChange={handleChange} searchText={searchText} />\n            <Button\n              className={cn(\"!text-3xl !px-2 !py-2 !-mt-1\")}\n              icon={\n                isResetButtonAnimated ? (\n                  <span\n                    className={cn(\n                      \"inline-block\",\n                      \"leading-0\",\n                      \"motion-safe:animate-spin\"\n                    )}\n                  >\n                    <RiRefreshFill />\n                  </span>\n                ) : (\n                  <RiRefreshFill />\n                )\n              }\n              iconRight\n              isLabelHidden\n              isLight\n              label=\"Reset\"\n              mode=\"button\"\n              onClick={resetOptions}\n              tooltip=\"Reset search and filter options\"\n            />\n          </div>\n          <div className={cn(\"flex gap-4 w-full\", \"flex-wrap\")}>\n            <div className={cn(\"z-30 grow min-w-fit\")}>\n              <SingleSelection\n                options={sortOptions}\n                selectedOption={selectedSort}\n                setSelectedOption={setSelectedSort}\n              />\n            </div>\n            <div className={cn(\"z-20 grow\")}>\n              <MultiSelection\n                options={tagOptions}\n                placeholder=\"Filter by tags...\"\n                selectedOptions={selectedTags}\n                setSelectedOptions={setSelectedTags}\n              />\n            </div>\n          </div>\n        </section>\n        <section\n          aria-label=\"Blogs\"\n          className={cn(\"flex gap-4 p-0 justify-center\", \"flex-wrap\")}\n        >\n          {status === \"loading\" ? (\n            [...Array(6).keys()].map((key) => <BlogCardLoading key={key} />)\n          ) : status === \"error\" ? (\n            <div className={cn(\"text-center mb-8 text-xl \")}>\n              <span className={cn(\"text-danger\")}>Something went wrong</span> -\n              Try again later\n            </div>\n          ) : filteredArticles.length === 0 ? (\n            <div className={cn(\"text-center mb-8 text-xl \")}>\n              <span className={cn(\"text-danger\")}>No articles found</span> - Try\n              a different filter\n            </div>\n          ) : (\n            filteredArticles\n          )}\n        </section>\n      </FadeIn>\n    </div>\n  );\n};\n\nexport default Blog;\n","import Footer from \"@components/layout/Footer\";\nimport Page from \"@components/layout/Page\";\nimport Navbar from \"@components/layout/nav/Navbar\";\nimport ScrollToTop from \"@components/utils/ScrollToTop\";\nimport { BLOG } from \"@constants/routes\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport BlogPage from \"./Blog\";\nexport default {\n  component: BlogPage,\n  parameters: {\n    backgrounds: {\n      disable: true\n    },\n    controls: {\n      hideNoControlsWarning: true\n    }\n  }\n};\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 10 * (60 * 1000),\n      // 10 mins\n      cacheTime: 60 * (60 * 1000) // 1 hour\n    }\n  }\n});\n\nexport const Blog = () => <QueryClientProvider client={queryClient}>\n    <Router>\n      <ScrollToTop />\n      <Navbar />\n      <Page content={<BlogPage />} description={BLOG.description} title={BLOG.title} />\n      <Footer allowFixed />\n    </Router>\n  </QueryClientProvider>;\nBlog.parameters = {\n  ...Blog.parameters,\n  docs: {\n    ...Blog.parameters?.docs,\n    source: {\n      originalSource: \"() => <QueryClientProvider client={queryClient}>\\n    <Router>\\n      <ScrollToTop />\\n      <Navbar />\\n      <Page content={<BlogPage />} description={BLOG.description} title={BLOG.title} />\\n      <Footer allowFixed />\\n    </Router>\\n  </QueryClientProvider>\",\n      ...Blog.parameters?.docs?.source\n    }\n  }\n};"],"names":["searchFilter","searchText","item","search","tag","defaultSort","sortOptions","articlesToDisplay","Blog","selectedTags","setSelectedTags","useState","selectedSort","setSelectedSort","tagOptions","setTagOptions","setSearchText","status","articles","useQuery","devdottoArticlesMeta","useEffect","articleMeta","count","option","a","b","handleChange","useCallback","e","isResetButtonAnimated","setIsResetButtonAnimated","resetOptions","navigate","useNavigate","localStorageProjectOptions","setLocalStorageProjectOptions","useLocalStorage","queryParams","useQueryParams","decodeArrayAsCsv","value","o","prev","_a","encodeArrayAsCsv","t","filteredArticles","useMemo","sortByPopularity","sortFuncFromOption","tags","articleTag","index","jsx","BlogCard","jsxs","FadeIn","cn","Button","SiDevdotto","SiMedium","SearchField","RiRefreshFill","SingleSelection","MultiSelection","key","BlogCardLoading","BlogPage","Blog_stories","queryClient","QueryClient","QueryClientProvider","Router","ScrollToTop","Navbar","Page","BLOG","Footer","_c","_b"],"mappings":"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"}